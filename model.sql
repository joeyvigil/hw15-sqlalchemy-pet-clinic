-- INSERT data generated by chatGPT

-- DROP
DROP TABLE IF EXISTS owners;
DROP TABLE IF EXISTS pets;
DROP TABLE IF EXISTS veterinarians;
DROP TABLE IF EXISTS appointments;

-- CREATE
CREATE TABLE owners (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(255) NOT NULL,
  phone VARCHAR(255) NOT NULL,
  email VARCHAR(255) UNIQUE
);

CREATE TABLE pets (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(255) NOT NULL,
  species VARCHAR(255) NOT NULL,
  breed VARCHAR(255),
  age INTEGER,
  owner_id INTEGER,
  FOREIGN KEY (owner_id) REFERENCES owners(id) ON DELETE CASCADE
);

CREATE TABLE veterinarians (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name VARCHAR(255) NOT NULL,
  specialization VARCHAR(255),
  email VARCHAR(255) UNIQUE
);

CREATE TABLE appointments (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  pet_id INTEGER,
  veterinarian_id INTEGER,
  appointment_date DEFAULT current_timestamp NOT NULL,
  notes VARCHAR(255),
  status VARCHAR(255) DEFAULT "Scheduled",
  FOREIGN KEY (pet_id) REFERENCES pets(id) ON DELETE CASCADE,
  FOREIGN KEY (veterinarian_id) REFERENCES veterinarians(id) ON DELETE CASCADE
);




--INSERT

-- INSERT INTO salespersons (`first`, `last`, phone, account_num, updated_at)
-- VALUES 
--   ('Laura', 'Nguyen', '555-234-7890', '491028', '2025-07-15 14:32:10'),



-- test -- create a table that shows which mechanics worked the most jobs
-- SELECT m.first,m.last, count(*)
-- FROM service_mechanics sm
-- JOIN service_tickets st ON  st.id =sm.service_id 
-- JOIN mechanics m ON m.id = sm.mechanic_id
-- GROUP BY  m.first,m.last
-- ORDER BY count(*) DESC
-- ;